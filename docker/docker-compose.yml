version: '3.8'

services:
  app:
    build:
      context: ../..
      dockerfile: deploy/docker/Dockerfile
    container_name: tx-demo
    ports:
      - "50051:50051"  # gRPC服务端口
      - "6060:6060"    # pprof端口
    environment:
      - TZ=Asia/Shanghai
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=tx_demo
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - JAEGER_AGENT_HOST=jaeger
      - JAEGER_AGENT_PORT=6831
    depends_on:
      - postgres
      - redis
      - jaeger
    networks:
      - tx-demo-network

  postgres:
    image: postgres:15-alpine
    container_name: tx-demo-postgres
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=tx_demo
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - tx-demo-network

  redis:
    image: redis:7-alpine
    container_name: tx-demo-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - tx-demo-network

  jaeger:
    image: jaegertracing/all-in-one:1.42
    container_name: tx-demo-jaeger
    ports:
      - "5775:5775/udp"
      - "6831:6831/udp"
      - "6832:6832/udp"
      - "5778:5778"
      - "16686:16686"
      - "4317:4317"
      - "4318:4318"
      - "14250:14250"
      - "14268:14268"
      - "14269:14269"
      - "9411:9411"
    environment:
      - COLLECTOR_ZIPKIN_HOST_PORT=:9411
    networks:
      - tx-demo-network

networks:
  tx-demo-network:
    driver: bridge

volumes:
  postgres_data:
  redis_data: